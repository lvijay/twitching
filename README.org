#+TITLE: twitching, an Emacs client for Twitter

Twitching is an Emacs Twitter client to get tweets from a
user's followers.

* History

Twitching was written with two primary goals in mind:

1. Get tweets from all followed users without losing any.

2. The ability to filter some tweets from the timeline.

* Features

1. Periodically download your timeline and show them in a
   buffer.

2. Favorite tweets.

3. Navigate easily through your tweets.  Use Emacs's ~C-s~
   and ~C-r~ to quickly find tweets.

4. Filters -- probably the best feature of twitching.  If
   you're really irritated that all your tweets have
   something annoying like ~#RoyalWedding~, set up a filter
   that will remove all tweets with that hashtag and your
   Twitter feed is clean.  Filters are persistent so future
   tweets that match will also be filtered away.

5. Remove -- Same as filters but without persistence.

6. Group -- This provides a way to show all your tweets
   ordered by the tweeters.  Comes in two flavors: group all
   tweets, or group only the tweets of a single user.

7. Follow/UnFollow users.

8. Open a hashtag in a browser.  If you see a few tweets
   with [[http://twitter.com/#!/search/%23interviewswithhari][#interviewswithhari]] and want to see more you can
   open it up on the browser.  This is currently not
   supported as viewing in Emacs.

9. Open a user mention in the browser.  Same as 8, but for
   user mentions in tweets.

10. Copy specific parts of a tweet and put it into the
    ~kill-ring~.  For example, ~c t~ copies the tweet text,
    and ~c s~ copies the current tweet's status id.

* Missing Features

Twitching does not provide a way to perform any of Twitter's
"social networking" features.

As is right now, there is no way to compose a tweet, reply
to a tweet or retweet.  There's no way to get tweets where
you're mentioned either.

Contributions to do these are of course welcome.  They
aren't on the TODO list though.

* Upcoming Features

See the TODO file included with the package for details on
upcoming features.

* Usage

Before you use twitching, you must have a Twitter consumer
token and consumer token secret.  If you don't already have
one, see the below section on [[Getting a consumer-key and
consumer-secret]] for details.

** Installation

To use twitching, put the files ~twitching.el~, ~oauth.el~,
~json.el~ and ~hmac-sha1.el~ in a directory and add this
directory to your Emacs load-path.

Add the below lines to your ~.emacs~ file.

#+BEGIN_SRC emacs-lisp
;;; Twitter mode in Emacs
(add-to-list 'load-path "/path/to/twitching")
(autoload 'twitching-to-get-my-tweets "twitching" "Start Twitching timer" t)
(autoload 'twitching-show-favorites "twitching" "show favorite tweets" t)
(autoload 'twitching-home-timeline-get "twitching" "Get Twitter home page" t)
#+END_SRC

** Downloading tweets

*** Downloading your home timeline once

To just download your tweets, do =M-x
twitching-home-timeline-get=.  This will work even if the
timer is running.

Your tweets will be shown in the buffer ~*Twitching*~.

*** Periodically downloading tweets

To periodically fetch your tweets type =M-x
twitching-to-get-my-tweets=.  This will start a timer that
downloads your tweets periodically and put them in the
buffer ~*Twitching*~.  

The default value of this timer is set to 5 minutes, but it
can be customized by changing the value of
=*twitching-timer-interval*=.  Simply add the following line
to your ~.emacs~ file.

#+BEGIN_SRC emacs-lisp
(setq *twitching-timer-interval* SECONDS)
#+END_SRC emacs-lisp

where SECONDS is the new interval period.  If you have
already started the timer, you will need to stop it and
start it again for the new interval to take effect.

**** Stopping the timer

The timer interval can be stopped by =M-x twitching-stop=.

Twitching will first ask you to enter your consumer key and
consumer secret.  (See below for details on getting these.)
After this, twitching will open up a browser window which
will ask you to enter your username and password.  Enter it
and authorize your app.  After this, you will be shown a 7
digit number on the browser.  Enter this at the Emacs
minibuffer.

** Using twitching

*** Navigation

You can go to the next tweet by using any of the following
keys: ~C-n~, ~n~, down-arrow or ~j~.  To nagivate to the
previous tweet, you can use any of the keys: ~C-p~, ~p~,
up-arrow or ~k~.  These commands support prefix arguments.

To scroll down a page, you can use ~C-v~, SPC or PageDown.
You can scroll up a page using ~M-v~, Backspace, or PageUp. [fn:pageup]

[fn:pageup] Emacs defines two commands ~scroll-up~ and
~scroll-down~ which do the inverse of what PageUp and
PageDown do.  I use the common meanings of PageUp and
PageDown, not the Emacs definitions.

As opposed to Twitter's web interface, where newer tweets
are shown above older ones, in twitching the older tweets
are shown first and new tweets get appended to the buffer.

*** Favoriting

Tweets can be favorited by typing ~s~ on a tweet.  If a
tweet is favorited, it will have a star shown next to it.
If ~s~ is pressed on an already favorited tweet, twitching
will unfavorite the tweet.

** Getting a consumer-key and consumer-secret

To get your own ~consumer-key~ and ~consumer-secret~, go to
<https://dev.twitter.com/apps/new> and register a new
application.

Select *Application Type* as *Client* and *Default Access
Type* as *Read & Write*.  *Read only* will also work but
favoriting tweets will not be possible.  Filtering, grouping
and other features will work.

*** Why such an elaborate route?

If you write a Twitter client, you're expected to encode the
consumer-key and consumer-secret within your application in
such a way that your users do not have access to them.
Obviously, this does not work well with Free Software
programs.

* Displaying User Profile images

To enable display of user profile pictures along with their
tweets, add the following line to your ~.emacs~ file after
the customizations mentioned in the section [[Usage]].

#+BEGIN_SRC emacs-lisp
;;; Show user's profile pictures with their tweets.
(setq *twitching-profile-use-p* t)
#+END_SRC

Twitching will lazily download the user profile images and
store them in your filesystem.  So immediately after
enabling this feature, your twitching buffer will still show
your tweets without any profile images.  The images will
show up in time.

The profile images are stored in the directory specified by
the variable ~*twitching-profile-directory*~.  By default,
it evaluates to =~/.emacs.d/twitching/thumbnails=.

** Lack of image support in Windows

By default, Emacs does not ship with support for JPEG, PNG
or GIF formats.  See the answer to the question "3.3 How do
I get image support?" in the [[http://www.gnu.org/software/emacs/windows/Installing-Emacs.html][Emacs FAQ for Windows]].

To enable image support on Windows, I have found [[http://gnuwin32.sourceforge.net/][GnuWin32]]
useful.  Install GnuWin32 and add its installation path to
your ~PATH~ environment variable.  Emacs picks it up and
images show up properly.

* License

~twitching~ is licensed under the terms of the GPLv3 (or
later).  This means you're free to use it for personal and
commercial use, you're free to copy it and give copies away,
and you're free to modify and redesign the source code, and
to create derivative works.  For details, please read the
contents of the file LICENSE distributed with ~twitching~ or
visit [[http://www.gnu.org/licenses/gpl-3.0.html]].

#+OPTIONS: toc:2
